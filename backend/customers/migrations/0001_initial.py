# Generated by Django 5.0.6 on 2024-05-29 14:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_id', models.IntegerField(unique=True, verbose_name='Персональный идентификатор пользователя')),
                ('customer_name', models.CharField(max_length=150, verbose_name='ФИО/Сокращенное название')),
                ('customer_type', models.CharField(choices=[('CM', 'Физическое лицо'), ('LC', 'ООО'), ('IE', 'Индивидуальный предприниматель')], max_length=2)),
                ('post_address', models.CharField(max_length=150, verbose_name='Почтовый адрес')),
                ('inn', models.IntegerField(verbose_name='Идентификационный номер налогоплательщика')),
                ('full_company_name', models.CharField(max_length=150, verbose_name='Полное название компании')),
                ('orgn', models.IntegerField(verbose_name='Основной гос. регистрационный номер')),
                ('kpp', models.IntegerField(blank=True, null=True, verbose_name='Код причины постановки на учет')),
                ('legal_address', models.CharField(max_length=255, verbose_name='Юридический адрес')),
                ('okpo', models.CharField(max_length=255, verbose_name='Общероссийский классификатор предприятий и организаций')),
                ('okved', models.CharField(max_length=255, verbose_name='Общероссийский классификатор видов экономической деятельности')),
                ('place_of_residence', models.CharField(max_length=150, verbose_name='Адрес прописки')),
                ('ogrnip', models.CharField(verbose_name='Основной государственный регистрационный номер индивидуального предпринимателя')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to=settings.AUTH_USER_MODEL, verbose_name='Заказчики')),
            ],
            options={
                'verbose_name': 'Заказчик',
                'verbose_name_plural': 'Заказчики',
            },
        ),
        migrations.CreateModel(
            name='CustomerContacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Имя контактного лица (может быть не сам заказчик)')),
                ('contact_type', models.CharField(choices=[('PH', 'Телефон'), ('EL', 'Электронная почта'), ('TG', 'Аккаунт Телеграм'), ('WA', "Аккаунт What's App"), ('CS', 'Сайт заказчика')], max_length=2, verbose_name='Тип контакта')),
                ('contact_info', models.CharField(max_length=255, verbose_name='Данные контакта')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='customers.customer', verbose_name='Контакты заказчика')),
            ],
            options={
                'verbose_name': 'Контакт пользователя',
                'verbose_name_plural': 'Контакты пользователя',
            },
        ),
        migrations.CreateModel(
            name='CustomerRequisites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=150, verbose_name='Название банка')),
                ('bic', models.IntegerField(verbose_name='Банковский идентификационный код')),
                ('bank_account', models.CharField(max_length=150, verbose_name='Корреспондентский счет банка')),
                ('customer_account_number', models.IntegerField(verbose_name='Номер расчетного счета заказчика')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requisites', to='customers.customer')),
            ],
            options={
                'verbose_name': 'Реквизит пользователя',
                'verbose_name_plural': 'Реквизиты пользователя',
            },
        ),
    ]
