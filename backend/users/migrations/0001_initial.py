# Generated by Django 5.0.6 on 2024-10-23 13:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('middle_name', models.CharField(default='', max_length=150, verbose_name='Отчество')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Электронный адрес')),
                ('phone_number', models.CharField(default='', max_length=150, verbose_name='Номер телефона')),
                ('is_email_verified', models.BooleanField(default=False, verbose_name='Подтверждена почта')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdvertiseInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('utm_source', models.CharField()),
                ('utm_content', models.CharField()),
                ('utm_medium', models.CharField()),
                ('utm_term', models.CharField()),
                ('utm_campaign', models.CharField()),
                ('partner_id', models.IntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='advertise_info', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Пакет рекламной информации',
                'verbose_name_plural': 'Пакеты рекламной информации',
                'ordering': ['-updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Passport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('series', models.CharField(max_length=150, verbose_name='Серия паспорта')),
                ('number', models.CharField(max_length=150, verbose_name='Номер паспорта')),
                ('release_date', models.DateField(max_length=150, verbose_name='Дата выдачи')),
                ('issued', models.CharField(max_length=150, verbose_name='Выдан')),
                ('unit_code', models.CharField(max_length=7, verbose_name='Код подразделения')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='passport', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Паспорт пользователя',
                'verbose_name_plural': 'Паспорта пользователей',
                'ordering': ['-updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserRequisites',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bank_name', models.CharField(max_length=150, verbose_name='Название банка')),
                ('bic', models.CharField(max_length=150, verbose_name='Банковский идентификационный код')),
                ('bank_account', models.CharField(max_length=150, verbose_name='Корреспондентский счет банка')),
                ('user_account', models.CharField(max_length=150, verbose_name='Счет пользователя в банке')),
                ('card_number', models.CharField(max_length=150, verbose_name='Номер карты')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requisites', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Реквизит пользователя',
                'verbose_name_plural': 'Реквизиты пользователя',
                'ordering': ['-updated_at'],
                'abstract': False,
            },
        ),
    ]
