services:
  backend:
    build:
      context: ./backend
    container_name: drf-container
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/backend
    command: >
      sh -c "python manage.py migrate &&
             gunicorn project.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      - database

  database:
    image: postgres:13
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_DB: employment
      POSTGRES_USER: observer_user
      POSTGRES_PASSWORD: qwerty2F
    volumes:
      - pgdata:/var/lib/postgresql/data

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3.8-management
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - ./backend/.env

  worker:
    container_name: celery
    hostname: celery
    build: ./backend
    volumes:
      - ./backend:/backend
    command: celery -A project.celery_app worker -l INFO
#    command: sh -c "tail -f /dev/null"
    links:
      - rabbitmq
    env_file:
      - ./backend/.env
    depends_on:
      - database
      - rabbitmq

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./backend/static:/static
    depends_on:
      - backend

volumes:
  pgdata:
  prometheus_data:
  grafana_data:
